name: android-apk-build

on:
  workflow_dispatch:   # 手动触发
  push:
    tags:
      - "v*"          # 依然支持推送 Tag 触发

jobs:
  build-android:
    runs-on: macos-latest   # Android 构建需要 macOS/Linux，这里保留 macOS
    permissions:
      contents: write
    steps:
      # 签出代码 
      - uses: actions/checkout@v4
        with:
          ref: master

      # APK 签名设置
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > simple_live_app/android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> simple_live_app/android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> simple_live_app/android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> simple_live_app/android/key.properties

      # 设置 JAVA 环境
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: 'gradle'
      
      # 设置 Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true 

      # 更新 Flutter packages
      - name: Restore packages
        run: |
          cd simple_live_app
          flutter pub get

      # 打包 APK
      - name: Build APK
        run: |
          cd simple_live_app
          flutter build apk --release --split-per-abi

      # 读取版本信息
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/app_version.json
      - name: Echo version
        run: echo "${{ fromJson(steps.version.outputs.content).version }}"
      - name: Echo version content
        run: echo "${{ fromJson(steps.version.outputs.content).version_desc }}"

      # 上传至 Release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ fromJson(steps.version.outputs.content).version }}"
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            simple_live_app/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-x86_64-release.apk

      # 完成
      - run: echo "✅ Android APK build and release upload finished. Job status: ${{ job.status }}"
      
